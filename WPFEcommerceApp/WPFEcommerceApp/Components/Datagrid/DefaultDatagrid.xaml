<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa= "http://schemas.fontawesome.io/icons/"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle 
                            x:Name="Border" 
                            Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                            SnapsToDevicePixels="True"/>
                        <Polygon 
                            x:Name="Arrow" 
                            Fill="Black" 
                            HorizontalAlignment="Right" 
                            Margin="8,8,3,3" 
                            Opacity="0.15" 
                            Points="0,10 10,10 10,0" 
                            Stretch="Uniform" 
                            VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{StaticResource BackgroundColorBrush}"/>
        <Setter Property="AlternatingRowBackground" Value="{StaticResource BoxShadowColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource BlackColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource WhiteColorBrush}"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Padding="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button 
                                            Command="{x:Static DataGrid.SelectAllCommand}" 
                                            Focusable="false" 
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, 
                                                    TypeInTargetAssembly={x:Type DataGrid}}}" 
                                            Visibility="{Binding HeadersVisibility, 
                                                        ConverterParameter={x:Static DataGridHeadersVisibility.All}, 
                                            Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                            Width="{Binding CellsPanelHorizontalOffset, 
                                                    RelativeSource={RelativeSource 
                                                    AncestorType={x:Type DataGrid}}}"/>
                                        <DataGridColumnHeadersPresenter 
                                            x:Name="PART_ColumnHeadersPresenter" 
                                            Grid.Column="1" 
                                            Visibility="{Binding HeadersVisibility, 
                                                                 ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                                 Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                                 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter 
                                            x:Name="PART_ScrollContentPresenter" 
                                            CanContentScroll="{TemplateBinding CanContentScroll}" 
                                            Grid.ColumnSpan="2" 
                                            Grid.Row="1"/>
                                        <ScrollBar 
                                            x:Name="PART_VerticalScrollBar" 
                                            Grid.Column="2" 
                                            Maximum="{TemplateBinding ScrollableHeight}" 
                                            Orientation="Vertical" 
                                            Grid.Row="1" 
                                            Value="{Binding VerticalOffset, 
                                                    Mode=OneWay, 
                                                    RelativeSource={RelativeSource TemplatedParent}}" 
                                                    ViewportSize="{TemplateBinding ViewportHeight}" 
                                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                                                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar 
                                                x:Name="PART_HorizontalScrollBar" 
                                                Grid.Column="1" 
                                                Maximum="{TemplateBinding ScrollableWidth}" 
                                                Orientation="Horizontal" 
                                                Value="{Binding HorizontalOffset, 
                                                        Mode=OneWay, 
                                                        RelativeSource={RelativeSource TemplatedParent}}" 
                                                        ViewportSize="{TemplateBinding ViewportWidth}" 
                                                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource NotAvailableColorBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource Medium}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeText}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteColorBrush}"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Grid
                                    Grid.Column="1"
                                    Margin="5 0 0 0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Right"
                                    Width="10">
                                    <TextBlock
                                        x:Name="SortUpIcon"
                                        Visibility="Collapsed"
                                        Height="10"
                                        Width="10"
                                        VerticalAlignment="Center"
                                        Foreground="{TemplateBinding Foreground}">
                                        <fa:ImageAwesome Icon="SortUp" 
                                                         Height="{Binding ElementName=SortUpIcon, Path=ActualHeight}"
                                                         Width="{Binding ElementName=SortUpIcon, Path=ActualHeight}"
                                                         Foreground="{Binding ElementName=SortDownIcon, Path=Foreground}"/>
                                    </TextBlock>
                                    <TextBlock
                                        x:Name="SortDownIcon"
                                        Visibility="Collapsed"
                                        Height="10"
                                        Width="10"
                                        VerticalAlignment="Center"
                                        Foreground="{TemplateBinding Foreground}">
                                        <fa:ImageAwesome Icon="SortDown" 
                                                         Height="{Binding ElementName=SortUpIcon, Path=ActualHeight}"
                                                         Width="{Binding ElementName=SortUpIcon, Path=ActualHeight}"
                                                         Foreground="{Binding ElementName=SortDownIcon, Path=Foreground}"/>
                                    </TextBlock>
                                </Grid>
                            </Grid>
                        </Border>
                        <Thumb 
                            x:Name="PART_LeftHeaderGripper" 
                            HorizontalAlignment="Left" 
                            Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb 
                            x:Name="PART_RightHeaderGripper" 
                            HorizontalAlignment="Right" 
                            Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter 
                                TargetName="SortUpIcon"
                                Property="Visibility"
                                Value="Visible"/>
                            <Setter 
                                TargetName="SortDownIcon"
                                Property="Visibility"
                                Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter 
                                TargetName="SortUpIcon"
                                Property="Visibility"
                                Value="Collapsed"/>
                            <Setter 
                                TargetName="SortDownIcon"
                                Property="Visibility"
                                Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                            <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsNewItem" Value="True">
                <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource Medium}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeText}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        SnapsToDevicePixels="True">
                        <ContentPresenter 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource BoxLineColorBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource WhiteColorBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BoxLineColorBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>