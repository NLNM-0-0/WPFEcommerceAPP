<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.fontawesome.com/icons/"
                    xmlns:i="clr-namespace:CalcBinding;assembly=CalcBinding"
                    xmlns:materialDesign = "http://materialdesigninxaml.net/winfx/xaml/themes">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Constants/Colors.xaml" />
        <ResourceDictionary Source="/Constants/Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="OurButtonControlTemplateBase" TargetType="{x:Type Button}">
        <Grid>
            <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                <Grid>
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            x:Name="border"
                            Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ElevationAssist.Elevation), Converter={x:Static materialDesign:ShadowConverter.Instance}}" />
                    <ProgressBar x:Name="ProgressBar"
                                Style="{DynamicResource MaterialDesignLinearProgressBar}"
                                Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Minimum)}"
                                Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Maximum)}"
                                Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IndicatorForeground)}"
                                Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IndicatorBackground)}"
                                BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IndicatorBackground)}"
                                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Value)}"
                                IsIndeterminate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IsIndeterminate)}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}}"
                                Height="{TemplateBinding Height}"
                                Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ButtonBase}}, Path=ActualWidth}"
                                Opacity="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Opacity)}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center">
                        <ProgressBar.Clip>
                            <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                <Binding ElementName="border" Path="ActualWidth" />
                                <Binding ElementName="border" Path="ActualHeight" />
                                <Binding ElementName="border" Path="CornerRadius" />
                                <Binding ElementName="border" Path="BorderThickness" />
                            </MultiBinding>
                        </ProgressBar.Clip>
                    </ProgressBar>
                </Grid>
            </AdornerDecorator>
            <materialDesign:Ripple  Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                <materialDesign:Ripple.Clip>
                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                        <Binding ElementName="border" Path="ActualWidth" />
                        <Binding ElementName="border" Path="ActualHeight" />
                        <Binding ElementName="border" Path="CornerRadius" />
                        <Binding ElementName="border" Path="BorderThickness" />
                    </MultiBinding>
                </materialDesign:Ripple.Clip>
            </materialDesign:Ripple>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="border" Property="materialDesign:ShadowAssist.Darken" Value="True" />
                <Setter Property="Background" Value="{StaticResource NotAvailableColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="border" Property="materialDesign:ShadowAssist.Darken" Value="True" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.38"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Default Button-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background" Value="{StaticResource BlackColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BoxLineColorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}"/>
        <Setter Property="TextBlock.FontFamily" Value="{StaticResource Regular}"/>
        <Setter Property="TextBlock.FontSize" Value="{StaticResource FontSizeText}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Content" Value="Button"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="{i:Binding Path=Height*0.5, RelativeSource={RelativeSource Mode=Self}}"/>
        <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp0"/>
        <Setter Property="Template" Value="{StaticResource OurButtonControlTemplateBase}"/>
    </Style>
</ResourceDictionary>