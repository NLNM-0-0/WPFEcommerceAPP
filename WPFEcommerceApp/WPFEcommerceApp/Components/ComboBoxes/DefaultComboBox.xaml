<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa= "http://schemas.fontawesome.io/icons/"
                    xmlns:local ="clr-namespace:WPFEcommerceApp"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
                    xmlns:materialDesign = "http://materialdesigninxaml.net/winfx/xaml/themes">
    <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="/Constants/Colors.xaml" />
            <ResourceDictionary Source="/Constants/Fonts.xaml" />
            <ResourceDictionary Source="/Components/TextBoxes/TextBoxes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Margin="{TemplateBinding Padding}"
                            x:Name="templateRoot" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{StaticResource WhiteColorBrush}"
                            BorderBrush="{StaticResource BoxLineColorBrush}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <Border 
                                Grid.Column="1"
                                x:Name="splitBorder" 
                                BorderBrush="Transparent" 
                                BorderThickness="1" 
                                HorizontalAlignment="Right" 
                                Margin="0 0 10 0" 
                                SnapsToDevicePixels="true" 
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <ToggleButton
                                    x:Name="arrow" 
                                    Padding="0"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Cursor="Hand"
                                    IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}}" 
                                    IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">>
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <fa:ImageAwesome 
                                                            x:Name="Icon"
                                                            Icon="SortDown"
                                                            Height="10"
                                                            Width="10"
                                                            Foreground="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor,AncestorLevel=2}, Path=BorderBrush}"/>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="LayoutTransform">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="180"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Border>
                            <ContentPresenter 
                                x:Name="contentPresenter" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource BlackColorBrush}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource BoxShadowColorBrush}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource BoxShadowColorBrush}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition 
                    MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" 
                    Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" 
                   AllowsTransparency="true" 
                   Grid.ColumnSpan="2" 
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                   Margin="1" 
                   Placement="Bottom" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome 
                    x:Name="shadow" 
                    Color="Transparent" 
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border 
                        x:Name="dropDownBorder"
                        Background="{StaticResource WhiteColorBrush}"
                        BorderBrush="{StaticResource BoxLineColorBrush}" 
                        BorderThickness="1"
                        Margin="0 5">

                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle 
                                        x:Name="opaqueRect" 
                                        Fill="{Binding Background, ElementName=dropDownBorder}" 
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        RadiusX="10"
                                        RadiusY="10"/>
                                </Canvas>
                                <ItemsPresenter 
                                    x:Name="ItemsPresenter" 
                                    KeyboardNavigation.DirectionalNavigation="Contained" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton 
                x:Name="toggleButton" 
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Grid.ColumnSpan="2" 
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButton}"
                IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}}" 
                Tag="{TemplateBinding Tag}">
                <TextBox 
                    x:Name="PART_EditableTextBox" 
                    Background="{StaticResource WhiteColorBrush}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    IsReadOnly="{c:Binding Path=!IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}" 
                    VerticalContentAlignment="Center"
                    Tag="{TemplateBinding Tag}"
                    Style="{StaticResource TextBoxHintTransparentBorder}"
                    Text="{Binding ElementName=contentPresenter, Path=Content}">
                </TextBox>
            </ToggleButton>
            <ContentPresenter 
                x:Name="contentPresenter"
                Visibility="Collapsed"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                Content="{TemplateBinding SelectionBoxItem}" 
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="toggleButton" Property="IsChecked" Value="false"/>
                <Setter TargetName="toggleButton" Property="IsEnabled" Value="false"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="Transparent"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    
    
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" 
                   AllowsTransparency="true" 
                   Grid.ColumnSpan="2" 
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                   Margin="1" 
                   Placement="Bottom" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome 
                    x:Name="shadow" 
                    Color="Transparent" 
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border 
                        x:Name="dropDownBorder"
                        Background="{StaticResource WhiteColorBrush}"
                        BorderBrush="{StaticResource BoxLineColorBrush}" 
                        BorderThickness="1"
                        Margin="0 5 0 5">
                        
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle 
                                        x:Name="opaqueRect" 
                                        Fill="{Binding Background, ElementName=dropDownBorder}" 
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        RadiusX="10"
                                        RadiusY="10"/>
                                </Canvas>
                                <ItemsPresenter 
                                    x:Name="ItemsPresenter" 
                                    KeyboardNavigation.DirectionalNavigation="Contained" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton 
                x:Name="toggleButton" 
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Grid.ColumnSpan="2" 
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}">
                <TextBox 
                    x:Name="PART_EditableTextBox" 
                    Background="{StaticResource WhiteColorBrush}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    IsReadOnly="{c:Binding Path=!IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}" 
                    VerticalContentAlignment="Center"
                    Tag="{TemplateBinding Tag}"
                    Style="{StaticResource TextBoxHintTransparentBorder}"
                    Text="{Binding ElementName=contentPresenter, Path=Content}">
                </TextBox>
            </ToggleButton>
            
            <ContentPresenter 
                x:Name="contentPresenter" 
                Visibility="Hidden"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                Content="{TemplateBinding SelectionBoxItem}" 
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="Transparent"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
   
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource WhiteColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BoxShadowColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource BlackColorBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->
    
    <!-- Style of ComboBox Item -->
    <!--<Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border 
                        x:Name="Bd" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Padding="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="true">
                        <ContentPresenter 
                            x:Name="contentPresenter"
                            TextBlock.FontFamily="{StaticResource Regular}"
                            TextBlock.Foreground="{StaticResource BlackColorBrush}"
                            TextBlock.FontSize="{StaticResource FontSizeText}"
                            HorizontalAlignment="{TemplateBinding 
                            HorizontalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource BoxShadowColorBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource BlackColorBrush}"/>
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource WhiteColorBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource BlackColorBrush}"/>
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource WhiteColorBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource BlackColorBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource BlackColorBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource BlackColorBrush}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource BoxShadowColorBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    
    <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
        <Setter Property="materialDesign:TextFieldAssist.TextFieldCornerRadius" Value="5" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="Height" Value="54"/>
        <Setter Property="FontFamily" Value="{StaticResource Regular}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeText}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BlackColorBrush}"/>
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{StaticResource BlackColorBrush}" />
        <Setter Property="materialDesign:HintAssist.Foreground" Value="{StaticResource BlackColorBrush}" />
    </Style>

</ResourceDictionary>