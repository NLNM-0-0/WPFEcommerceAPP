<UserControl x:Class="WPFEcommerceApp.ShopProduct"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPFEcommerceApp"
             mc:Ignorable="d" 
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:materialDesign = "http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:CalcBinding;assembly=CalcBinding">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:ShopProductStatusConverter x:Key="ShopProductStatusConverter"/>
        <local:ShopProductStatusColorConverter x:Key="ShopProductStatusColorConverter"/>
        <Style x:Key="RoundButtonAdd" TargetType="{x:Type ToggleButton}">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Background" Value="{StaticResource BlackColorBrush}"/>
            <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border 
                        x:Name="border" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="30" 
                        SnapsToDevicePixels="true">
                            <Grid x:Name="Icon">
                                <fa:ImageAwesome
                                Visibility="Visible"
                                x:Name="ActiveIcon"
                                Icon="Plus"
                                Margin="10"
                                Foreground="{StaticResource WhiteColorBrush}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" To="{StaticResource Black}" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" To="{StaticResource NotAvailable}" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="ActiveIcon" Property="Rotation" Value="45"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFloatingActionButton}">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Background" Value="{StaticResource BlackColorBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BoxLineColorBrush}"/>
            <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="{i:Binding Path=Height * 0.5, RelativeSource={RelativeSource Mode=Self}}"/>
            <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp0"/>
            <Setter Property="Template" Value="{StaticResource OurButtonControlTemplateBase}"/>
        </Style>
        <Style x:Key="ToggleButtonSlide" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource BackgroundColorBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BoxLineColorBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource BlackColorBrush}"/>
            <Setter Property="BorderThickness" Value="1 0 0 0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontFamily" Value="{StaticResource Medium}"/>
            <Setter Property="FontSize" Value="{StaticResource FontSizeText}"/>
            <Setter Property="Opacity" Value="0.6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border 
                            x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="true">
                            <Grid x:Name="Icon">
                                <fa:ImageAwesome
                                    Visibility="Visible"
                                    x:Name="ActiveIcon"
                                    Icon="AngleDoubleLeft"
                                    Margin="7"
                                    Width="16"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" To="0.85" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" To="0.6" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="ActiveIcon" Property="Rotation" Value="180"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="statusDataRow" TargetType="TextBlock">
            <Setter Property="Foreground">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource ShopProductStatusColorConverter}">
                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type DataGridRow}}" Path="Item.Status" />
                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type DataGridRow}}" Path="Item.InStock"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>

        </Style>
    </UserControl.Resources>
    <materialDesign:DialogHost
            CloseOnClickAway="True"
            Identifier="Notification">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Grid Background="Transparent"
                    Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Border Padding="50 0" Grid.Row="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        x:Name="Header"
                        Grid.ColumnSpan="2"
                        Text="Product"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        FontSize="{StaticResource FontSizeHeadline}"
                        Margin="0 30"/>
                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel
                            Visibility="{Binding ElementName=Extent, 
                            Path=IsChecked,
                            Converter={StaticResource BooleanToVisibilityConverter}}"
                            Orientation="Horizontal"
                            VerticalAlignment="Center">
                            <StackPanel
                                Margin="0 0 10 0">
                                <Button
                                    Style="{StaticResource RoundButton}"
                                    Command="{Binding OpenAddProductDialogCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}">
                                    <materialDesign:PackIcon
                                        Foreground="{StaticResource WhiteColorBrush}"
                                        Kind="Archive"
                                        Height="30"
                                        Width="30" />
                                </Button>
                                <TextBlock
                                    Text="Product"
                                    FontSize="{StaticResource FontSizeDescription}"/>
                            </StackPanel>
                                <StackPanel
                                    Margin="0 0 10 0">
                                    <Button
                                        Style="{StaticResource RoundButton}"
                                        Command="{Binding OpenAddCategoryDialogCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}">
                                        <materialDesign:PackIcon
                                            Foreground="{StaticResource WhiteColorBrush}"
                                            Kind="Shape"
                                            Height="30"
                                            Width="30"/>
                                    </Button>
                                    <TextBlock
                                        Text="Category"
                                        FontSize="{StaticResource FontSizeDescription}"/>
                                </StackPanel>
                                <StackPanel
                                    Margin="0 0 10 0">
                                    <Button
                                        Style="{StaticResource RoundButton}"
                                        Command="{Binding OpenAddBrandDialogCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}">
                                        <materialDesign:PackIcon
                                            Foreground="{StaticResource WhiteColorBrush}"
                                            Kind="Watermark"
                                            Height="30"
                                            Width="30"/>
                                    </Button>
                                    <TextBlock
                                    Text="Category"
                                    FontSize="{StaticResource FontSizeDescription}"/>
                                </StackPanel>
                            </StackPanel>
                            <ToggleButton 
                                Margin="0 -15 0 0"
                                x:Name="Extent"
                                Grid.Column="1"
                                IsChecked="False"
                                Style="{DynamicResource RoundButtonAdd}"/>
                        </Grid>
                </Grid>
            </Border>
            <Border Background="{StaticResource BackgroundColorBrush}"
                    Padding="50 30"
                    Margin="0 0 0 30"
                    Grid.Row="1">
                <Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <!-- SearchFilter1-->
                        <Grid 
                        Grid.Column="0"
                        Grid.Row="0" 
                        Margin="0 0 0 30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <TextBox 
                                    x:Name="textBoxSearch"
                                    Text="{Binding ProductNameSearch}"
                                    Width="auto"
                                    Style="{StaticResource TextBoxHintBlackBorder}"
                                    MaxWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}, Path=ActualWidth}"
                                    materialDesign:HintAssist.Hint="Product Name"/>
                            </Grid>

                            <Grid 
                            Grid.Column="1"
                            VerticalAlignment="Stretch"
                            Margin="30 0 0 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Column="0"
                                    Text="Price"
                                    VerticalAlignment="Center"
                                    FontSize="{StaticResource FontSizeText}"/>
                                <Grid Grid.Column="1">
                                    <TextBox 
                                        Style="{StaticResource TextBoxHintBlackBorder}"
                                        MaxWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}, Path=ActualWidth}"
                                        materialDesign:HintAssist.Hint="Min">
                                        <TextBox.Text>
                                            <Binding
                                                Path="MinPriceSearch"
                                                UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <local:NumberTextBoxValidation
                                                        IsCanEmpty="True"
                                                        Min="0"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </Grid>
                                <TextBlock
                                        Grid.Column="2"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Text="-"
                                        Foreground="{StaticResource NotAvailableColorBrush}"
                                        FontSize="{StaticResource FontSizeHeadline}"/>
                                <Grid Grid.Column="3">
                                    <TextBox 
                                        Style="{StaticResource TextBoxHintBlackBorder}"
                                        MaxWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}, Path=ActualWidth}"
                                        materialDesign:HintAssist.Hint="Max">
                                        <TextBox.Text>
                                            <Binding
                                                Path="MaxPriceSearch"
                                                UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <local:NumberTextBoxValidation
                                                        IsCanEmpty="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </Grid>
                            </Grid>
                        </Grid>
                        <Grid 
                        Grid.Column="0"
                        Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox
                                Text="{Binding CategorySearch.Name}"
                                materialDesign:HintAssist.Hint="Category"
                                Grid.Column="0"
                                ItemsSource="{Binding Categories}"
                                DisplayMemberPath="Name">
                                <ComboBox.SelectedItem>
                                    <Binding
                                        Path="CategorySearch"
                                        UpdateSourceTrigger="PropertyChanged"/>
                                </ComboBox.SelectedItem>
                            </ComboBox>
                            <ComboBox
                                Text="{Binding BrandSearch.Name}"
                                materialDesign:HintAssist.Hint="Brand"
                                Margin="30 0 0 0"
                                Grid.Column="1"
                                ItemsSource="{Binding Brands}"
                                DisplayMemberPath="Name">
                                <ComboBox.SelectedItem>
                                    <Binding
                                        Path="BrandSearch"
                                        UpdateSourceTrigger="PropertyChanged"/>
                                </ComboBox.SelectedItem>
                            </ComboBox>
                            <Grid 
                            Grid.Column="2"
                            VerticalAlignment="Stretch"
                            Margin="30 0 0 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                Grid.Column="0"
                                Text="Stock"
                                VerticalAlignment="Center"
                                FontSize="{StaticResource FontSizeText}"/>
                                <Grid Grid.Column="1">
                                    <TextBox 
                                        Style="{StaticResource TextBoxHintBlackBorder}"
                                        MaxWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}, Path=ActualWidth}"
                                        materialDesign:HintAssist.Hint="Min">
                                        <TextBox.Text>
                                            <Binding
                                                Path="MinInStockSearch"
                                                UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <local:NumberTextBoxValidation
                                                        IsCanEmpty="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </Grid>

                                <TextBlock
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Text="-"
                                    Foreground="{StaticResource NotAvailableColorBrush}"
                                    FontSize="{StaticResource FontSizeHeadline}"/>

                                <Grid Grid.Column="3">
                                    <TextBox 
                                        Style="{StaticResource TextBoxHintBlackBorder}"
                                        MaxWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}, Path=ActualWidth}"
                                        materialDesign:HintAssist.Hint="Max">
                                        <TextBox.Text>
                                            <Binding
                                                Path="MaxInStockSearch"
                                                UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <local:NumberTextBoxValidation
                                                        IsCanEmpty="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </Grid>
                            </Grid>
                        </Grid>
                        <Button 
                            Grid.Column="1"
                            Grid.Row="0"
                            Margin="20 0 0 30"
                            Content="Search"
                            Command="{Binding SearchProductCommand}"/>
                        <Button
                            Grid.Column="1"
                            Grid.Row="1"
                            Margin="20 0 0 0"
                            Content="Reset"
                            Command="{Binding ResetCommand}">
                        </Button>
                    </Grid>
                </Grid>
            </Border>
            <Border
                Margin="0 0 0 30"
                Padding="50 0"
                Grid.Row="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <RadioButton
                        Style="{StaticResource RadioTabButton}"
                        Grid.Column="0"
                        Content="All"
                        IsChecked="{Binding StatusAllSearch}"/>
                    <RadioButton
                        Style="{StaticResource RadioTabButton}"
                        Grid.Column="1"
                        Content="On Sale"
                        IsChecked="{Binding StatusOnSaleSearch}"/>
                    <RadioButton
                        Style="{StaticResource RadioTabButton}"
                        Grid.Column="2"
                        Content="Out Of Stock"
                        IsChecked="{Binding StatusOutOfStockSearch}"/>
                    <RadioButton
                        Style="{StaticResource RadioTabButton}"
                        Grid.Column="3"
                        Content="Banned"
                        IsChecked="{Binding StatusBannedSearch}"/>
                </Grid>
            </Border>
            <Grid
                Grid.Row="3"
                Background="Transparent">
                <DataGrid
                            x:Name="dataGrid"
                            Padding="50 0" 
                            ItemsSource="{Binding Products, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}"
                            SelectedItem="{Binding SelectedProduct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}"
                            AutoGenerateColumns="False"
                            IsSynchronizedWithCurrentItem ="True"
                            ScrollViewer.CanContentScroll="True" 
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            ScrollViewer.HorizontalScrollBarVisibility="Auto">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="ID" Width="2*" Binding="{Binding Id, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Name" Width="4*" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Category" Width="3*" Binding="{Binding Category.Name, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Brand" Width="3*" Binding="{Binding Brand.Name, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Price" Width="3*" Binding="{i:Binding 'Price * (100 - Sale) / 100', UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="InStock" Width="3*" Binding="{Binding InStock, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Sold" Width="3*" Binding="{Binding Sold, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Status" Width="3*" ElementStyle="{StaticResource statusDataRow}">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ShopProductStatusConverter}" >
                                    <Binding Path="Status"/>
                                    <Binding Path="InStock"/>
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <Grid
                Grid.Row="4"
                Height="20"/>
        </Grid>
        <Grid
            Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <ToggleButton
                IsEnabled="{i:Binding '(SelectedIndex!=-1)', ElementName=dataGrid}"
                IsChecked="{Binding IsOpenProductInfoPortrait}"
                x:Name="OpenDrawerToggleButton"
                Grid.Column="0"
                Style="{StaticResource ToggleButtonSlide}"/>
            <Grid
                x:Name="productInfoPortraitGrid"
                Grid.Column="1">
                <ScrollViewer VerticalScrollBarVisibility="Hidden">
                    <ContentControl
                        Width="500"
                        Visibility="{i:Binding IsChecked, ElementName=OpenDrawerToggleButton}"
                        DataContext="{Binding StyleProductInfoPortrait, UpdateSourceTrigger=PropertyChanged}"
                        Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"/>
                </ScrollViewer>
            </Grid>
        </Grid>
    </Grid>
    </materialDesign:DialogHost>
    <UserControl.InputBindings>
        <KeyBinding
            Key="Enter"
            Command="{Binding SearchProductCommand}"/>
    </UserControl.InputBindings>
</UserControl>
