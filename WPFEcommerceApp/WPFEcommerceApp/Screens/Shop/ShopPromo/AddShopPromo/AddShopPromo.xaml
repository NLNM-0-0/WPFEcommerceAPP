<UserControl x:Class="WPFEcommerceApp.AddShopPromo"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPFEcommerceApp"
             xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignWidth="1380">
    <UserControl.Resources>
        <local:FalsesToTrueConverters x:Key="FalsesToTrueConverters"/>
    </UserControl.Resources>
    <ScrollViewer
        x:Name="scroll">
        <Grid
            Margin="50 0 50 0">
            <Grid Background="Transparent">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <TextBlock
                    Grid.Row="0"
                    Text="Promo Information"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    FontSize="{StaticResource FontSizeHeadline}"
                    Margin="0 30"/>
                <StackPanel
                    Grid.Row="1"
                    Orientation="Horizontal">
                    <Grid
                        Background="{StaticResource BlackColorBrush}"
                        Width="10"
                        Margin="0 0 10 0"/>
                    <TextBlock
                        Text="Basic information promo"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        FontWeight="DemiBold"
                        FontSize="{StaticResource FontSizeHeadline2}"/>
                </StackPanel>

                <Grid
                    Grid.Row="2"
                    Margin="30 30 30 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        Text="Target customer: "
                        FontWeight="SemiBold"
                        FontSize="{StaticResource FontSizeText}"
                        VerticalAlignment="Center"/>
                    <StackPanel
                        Grid.Column="2"
                        Orientation="Horizontal">
                        <local:PromoTypeBlock
                            x:Name="newCustomer"
                            Grid.Column="1"
                            Icon="AccountStar"
                            Height="auto"
                            HorizontalAlignment="Stretch"
                            OverlayBackground="#abc4ff"
                            ContentPromoBlock="New customer"
                            IsChecked="{c:Binding IsNewCustomer, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            Margin="0 0 30 0"
                            GroupName="targetCustomer"
                            Width="200"
                            IsHitTestVisible="{c:Binding '!IsAdmin', UpdateSourceTrigger=PropertyChanged}"/>
                        <local:PromoTypeBlock
                            Grid.Column="3"
                            Icon="AccountSupervisor"
                            Height="auto"
                            HorizontalAlignment="Stretch"
                            OverlayBackground="#9ba9ff"
                            ContentPromoBlock="All customers"
                            GroupName="targetCustomer"
                            Width="200"
                            IsChecked="{c:Binding IsAllCustomer, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            IsHitTestVisible="{c:Binding '!IsAdmin', UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>

                </Grid>
                <Grid
                    Grid.Row="3"
                    Margin="30 30 30 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox
                        x:Name="nameTextBox"
                        Grid.Column="0"
                        Style="{StaticResource TextBoxHintBlackBorder}"
                        materialDesign:HintAssist.Hint="Name"
                        Width="auto"
                        VerticalAlignment="Center"
                        MaxLength="150"
                        materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                        IsReadOnly="{c:Binding 'IsAdmin', UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Text>
                            <Binding
                                Path="Name"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:NotEmptyValidationRule 
                                        ValidatesOnTargetUpdated="True"
                                        IsNotCheckFirstTime="False"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBox
                        x:Name="codeTextBox"
                        Grid.Column="2"
                        Style="{StaticResource TextBoxHintBlackBorder}"
                        materialDesign:HintAssist.Hint="Code"
                        Width="auto"
                        VerticalAlignment="Center"
                        CharacterCasing="Upper"
                        MaxLength="15"
                        IsReadOnly="{c:Binding 'IsAdmin', UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Text>
                            <Binding
                                Path="Code"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PromoCodeValidation 
                                        ValidatesOnTargetUpdated="True"
                                        IsNotCheckFirstTime="False"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
                <Grid
                    Grid.Row="4"
                    Margin="30 30 30 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding ElementName=saleTextBox,Path=ActualWidth}"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="{Binding ElementName=saleTextBox,Path=ActualWidth}"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <DatePicker
                            x:Name="dateFromTextBox"
                            Grid.Column="0"
                            Style="{StaticResource OurDatePicker}"
                            materialDesign:HintAssist.Hint="From"
                            Width="auto"
                            VerticalAlignment="Center"
                            SelectedDate ="{Binding DateBegin, UpdateSourceTrigger=PropertyChanged}"
                            DisplayDateEnd="{Binding DateEnd, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{c:Binding '!IsAdmin', UpdateSourceTrigger=PropertyChanged}">
                        </DatePicker>
                        <DatePicker
                            x:Name="dateToTextBox"
                            Grid.Column="2"
                            Style="{StaticResource OurDatePicker}"
                            materialDesign:HintAssist.Hint="To"
                            Width="auto"
                            VerticalAlignment="Center"
                            SelectedDate="{Binding DateEnd, UpdateSourceTrigger=PropertyChanged}"
                            DisplayDateStart="{Binding DateBegin, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{c:Binding '!IsAdmin', UpdateSourceTrigger=PropertyChanged}">
                        </DatePicker>
                    </Grid>
                </Grid>
                <TextBox
                    x:Name="descriptionTextBox"
                    Grid.Row="5"
                    Style="{StaticResource TextBoxHintWrapText}"
                    materialDesign:HintAssist.Hint="Description"
                    Width="auto"
                    Margin="30 30 30 0"
                    Height="200"
                    VerticalAlignment="Center"
                    MaxLength="200"
                    materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                    IsReadOnly="{c:Binding 'IsAdmin', UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.Text>
                        <Binding
                            Path="Description"
                            UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:NotEmptyValidationRule 
                                    ValidatesOnTargetUpdated="True"
                                    IsNotCheckFirstTime="False"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <StackPanel
                    Grid.Row="6"
                    Orientation="Horizontal"
                    Margin="0 70 0 0">
                    <Grid
                        Background="{StaticResource BlackColorBrush}"
                        Width="10"
                        Margin="0 0 10 0"/>
                    <TextBlock
                        Text="Set up promo"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        FontWeight="DemiBold"
                        FontSize="{StaticResource FontSizeHeadline2}"/>
                </StackPanel>

                <Grid
                    Grid.Row="7"
                    Margin="30 30 30 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox
                        x:Name="minCostTextBox"
                        Grid.Column="0"
                        Style="{StaticResource TextBoxHintBlackBorder}"
                        materialDesign:HintAssist.Hint="Min Cost"
                        Width="{Binding ElementName=saleTextBox, Path=ActualWidth}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        materialDesign:TextFieldAssist.SuffixText=" USD"
                        IsReadOnly="{c:Binding 'IsAdmin', UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Text>
                            <Binding
                                Path="MinCost"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:NumberTextBoxValidation
                                        Type="DoubleType"
                                        Min="0"
                                        ValidatesOnTargetUpdated="True"
                                        IsNotCheckFirstTime="False"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBox
                        x:Name="saleTextBox"
                        Grid.Column="2"
                        Style="{StaticResource TextBoxHintBlackBorder}"
                        materialDesign:HintAssist.Hint="Sale"
                        Width="auto"
                        VerticalAlignment="Center"
                        materialDesign:TextFieldAssist.SuffixText="%"
                        IsReadOnly="{c:Binding 'IsAdmin', UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Text>
                            <Binding
                                Path="Sale"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:NumberTextBoxValidation
                                        Min="1"
                                        Max="100"
                                        ValidatesOnTargetUpdated="True"
                                        IsNotCheckFirstTime="False"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
                
                <Grid
                    Grid.Row="8"
                    Margin="30 30 30 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="15"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid
                        Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Text="Maximum reduction: "
                            FontWeight="SemiBold"
                            FontSize="{StaticResource FontSizeText}"
                            VerticalAlignment="Center"/>
                        <RadioButton
                            x:Name="isMaxSaleRadioButton"
                            Grid.Column="2"
                            Style="{StaticResource MaterialDesignRadioButton}"
                            Content="Limited"
                            FontSize="{StaticResource FontSizeText}"
                            VerticalAlignment="Center"
                            IsChecked="{Binding IsMaxSale, UpdateSourceTrigger=PropertyChanged}"
                            IsHitTestVisible="{c:Binding '!IsAdmin', UpdateSourceTrigger=PropertyChanged}"/>
                        <RadioButton
                            Grid.Column="4"
                            Style="{StaticResource MaterialDesignRadioButton}"
                            Content="Unlimited"
                            FontSize="{StaticResource FontSizeText}"
                            VerticalAlignment="Center"
                            IsChecked="{c:Binding '!IsChecked', ElementName=isMaxSaleRadioButton}"
                            IsHitTestVisible="{c:Binding '!IsAdmin', UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                    <TextBox
                        x:Name="maxSaleTextBox"
                        Grid.Row="2"
                        Style="{StaticResource TextBoxHintBlackBorder}"
                        materialDesign:HintAssist.Hint="Max Sale"
                        Width="{Binding ElementName=saleTextBox, Path=ActualWidth}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        Visibility="{c:Binding IsMaxSale, UpdateSourceTrigger=PropertyChanged}"
                        materialDesign:TextFieldAssist.SuffixText=" USD"
                        materialDesign:HintAssist.IsFloating="False"
                        IsReadOnly="{c:Binding 'IsAdmin', UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Text>
                            <Binding
                                Path="MaxSale"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:NumberTextBoxValidation
                                        Min="0"
                                        ValidatesOnTargetUpdated="True"
                                        IsNotCheckFirstTime="False"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
                <Grid
                    Grid.Row="9"
                    Margin="30 30 30 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="15"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid
                        Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Text="Amount"
                            FontWeight="SemiBold"
                            FontSize="{StaticResource FontSizeText}"
                            VerticalAlignment="Center"/>
                        <RadioButton
                            x:Name="isLimitedAmountRadioButton"
                            Grid.Column="2"
                            Style="{StaticResource MaterialDesignRadioButton}"
                            Content="Limited"
                            FontSize="{StaticResource FontSizeText}"
                            VerticalAlignment="Center"
                            IsChecked="{Binding IsLimitedAmount, UpdateSourceTrigger=PropertyChanged}"
                            IsHitTestVisible="{c:Binding '!IsAdmin', UpdateSourceTrigger=PropertyChanged}"/>
                        <RadioButton
                            Grid.Column="4"
                            Style="{StaticResource MaterialDesignRadioButton}"
                            Content="Unlimited"
                            FontSize="{StaticResource FontSizeText}"
                            VerticalAlignment="Center"
                            IsChecked="{c:Binding '!IsChecked', ElementName=isLimitedAmountRadioButton}"
                            IsHitTestVisible="{c:Binding '!IsAdmin', UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                    <TextBox
                        x:Name="amountTextBox"
                        Grid.Row="2"
                        Style="{StaticResource TextBoxHintBlackBorder}"
                        materialDesign:HintAssist.Hint="Amount"
                        Width="{Binding ElementName=saleTextBox, Path=ActualWidth}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        materialDesign:HintAssist.IsFloating="False"
                        Visibility="{c:Binding IsLimitedAmount, UpdateSourceTrigger=PropertyChanged}"
                        IsReadOnly="{c:Binding 'IsAdmin', UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Text>
                            <Binding
                                Path="Amount"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:NumberTextBoxValidation 
                                        Min="1"
                                        ValidatesOnTargetUpdated="True"
                                        IsNotCheckFirstTime="False"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
                <StackPanel
                    Grid.Row="10"
                    Orientation="Horizontal"
                    Margin="0 70 0 0">
                    <Grid
                        Background="{StaticResource BlackColorBrush}"
                        Width="10"
                        Margin="0 0 10 0"/>
                    <TextBlock
                        Text="Promo Products"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        FontWeight="DemiBold"
                        FontSize="{StaticResource FontSizeHeadline2}"/>
                </StackPanel>

                <Grid
                    Grid.Row="11"
                    Margin="0 30 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox
                                x:Name="searchByComboBox"
                                Height="{Binding ElementName=textBoxSearch, Path=ActualHeight}"
                                materialDesign:TextFieldAssist.TextFieldCornerRadius="5 0 0 5"
                                Grid.Column="0"
                                IsEditable="False"
                                materialDesign:HintAssist.Hint="Search By"
                                BorderThickness="1 1 0 1"
                                SelectedValuePath="Content"
                                SelectedValue="{Binding SearchBy, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBoxItem Content="Id"/>
                            <ComboBoxItem Content="Product Name"/>
                        </ComboBox>
                        <Grid Grid.Column="1">
                            <TextBox 
                                x:Name="textBoxSearch"
                                materialDesign:TextFieldAssist.TextFieldCornerRadius="0 5 5 0"
                                Width="auto"
                                Style="{StaticResource TextBoxHintBlackBorder}"
                                MaxWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}, Path=ActualWidth}"
                                materialDesign:HintAssist.Hint="{Binding ElementName=searchByComboBox, Path=Text}"
                                Text="{Binding SearchByValue, UpdateSourceTrigger=PropertyChanged}"
                                materialDesign:TextFieldAssist.TextBoxViewMargin="0 0 43 0"/>
                            <Button
                                Width="40"
                                Height="40"
                                Margin="0 0 3 0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right"
                                Padding="0"
                                materialDesign:ButtonAssist.CornerRadius="0"
                                Style="{StaticResource TransparentButton}"
                                Command="{Binding SearchCommand, UpdateSourceTrigger=PropertyChanged}">
                                <materialDesign:PackIcon
                                    Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button},Path=ActualWidth}"
                                    Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button},Path=ActualHeight}"
                                    Kind="Search">
                                </materialDesign:PackIcon>
                            </Button>
                        </Grid>
                    </Grid>
                    <Grid
                        Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Button
                            Grid.Column="1"
                            Height="{Binding ElementName=textBoxSearch, Path=Height}"
                            HorizontalAlignment="Right"
                            Style="{StaticResource WhiteButtonRectangle}"
                            Width="auto"
                            Padding="20 0"
                            Command="{Binding AddNewProductCommand, UpdateSourceTrigger=PropertyChanged}"
                            Visibility="{c:Binding '!IsAdmin', UpdateSourceTrigger=PropertyChanged}">
                            <Button.Content>
                                <StackPanel
                                    Orientation="Horizontal">
                                    <materialDesign:PackIcon
                                        Kind="PlusBold"
                                        VerticalAlignment="Center"/>
                                    <TextBlock
                                        Text=" Add new product"
                                        VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button.Content>
                            <Button.InputBindings>
                                <MouseBinding 
                                    MouseAction="LeftDoubleClick"
                                    Command="{Binding DoubleClickCommand, UpdateSourceTrigger=PropertyChanged}"/>
                            </Button.InputBindings>
                        </Button>
                        <Button
                            Grid.Column="3"
                            Style="{StaticResource ButtonRectangle}"
                            HorizontalAlignment="Right"
                            Width="auto"
                            Height="{Binding ElementName=textBoxSearch, Path=Height}"
                            Padding="20 0"
                            Visibility="{c:Binding '!IsAdmin', UpdateSourceTrigger=PropertyChanged}"
                            Command="{Binding SaveCommand, UpdateSourceTrigger=PropertyChanged}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}">
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource FalsesToTrueConverters}">
                                    <Binding ElementName="nameTextBox" Path="(Validation.HasError)"/>
                                    <Binding ElementName="codeTextBox" Path="(Validation.HasError)"/>
                                    <Binding ElementName="descriptionTextBox" Path="(Validation.HasError)"/>
                                    <Binding ElementName="minCostTextBox" Path="(Validation.HasError)"/>
                                    <Binding ElementName="saleTextBox" Path="(Validation.HasError)"/>
                                    <Binding ElementName="maxSaleTextBox" Path="(Validation.HasError)"/>
                                    <Binding ElementName="amountTextBox" Path="(Validation.HasError)"/>
                                    <Binding ElementName="dateFromTextBox" Path="(Validation.HasError)"/>
                                    <Binding ElementName="dateToTextBox" Path="(Validation.HasError)"/>
                                </MultiBinding> 
                            </Button.IsEnabled>
                            <Button.Content>
                                <StackPanel
                                    Orientation="Horizontal">
                                    <materialDesign:PackIcon
                                        Kind="CheckBold"
                                        VerticalAlignment="Center"/>
                                    <TextBlock
                                        Text=" Done"
                                        VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </Grid>
                </Grid>
                <Border
                    Grid.Row="12"
                    Margin="0 30 0 0"
                    Background="Transparent">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border
                            BorderBrush="{StaticResource BlackColorBrush}"
                            BorderThickness="1"
                            Padding="0 5"
                            Margin="0 0 0 10"
                            CornerRadius="5 5 0 0"
                            Background="{StaticResource BackgroundColorBrush}" Grid.ColumnSpan="2">
                            <Grid
                            Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="6*"/>
                                    <ColumnDefinition Width="6*"/>
                                    <ColumnDefinition Width="5*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Text="Product Name"
                                    Grid.Column="0"
                                    VerticalAlignment="Center"
                                    Padding="5 0"
                                    FontWeight="DemiBold"
                                    FontSize="{StaticResource FontSizeText}"/>
                                <TextBlock
                                    Text="Category"
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    Padding="5 0"
                                    FontWeight="DemiBold"
                                    FontSize="{StaticResource FontSizeText}"/>
                                <TextBlock
                                    Text="Brand"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    Padding="5 0"
                                    FontWeight="DemiBold"
                                    FontSize="{StaticResource FontSizeText}"/>
                                <TextBlock
                                    Text="Price"
                                    Grid.Column="3"
                                    VerticalAlignment="Center"
                                    Padding="5 0"
                                    FontWeight="DemiBold"
                                    FontSize="{StaticResource FontSizeText}"/>
                                <TextBlock
                                    Text="Action"
                                    Grid.Column="4"
                                    VerticalAlignment="Center"
                                    Padding="5 0"
                                    FontWeight="DemiBold"
                                    HorizontalAlignment="Center"
                                    FontSize="{StaticResource FontSizeText}"/>
                            </Grid>
                        </Border>

                        <ListView 
                            x:Name="listView"
                            Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=ActualWidth}"
                            ItemsSource="{Binding FilterProductPromos, UpdateSourceTrigger=PropertyChanged}"
                            IsHitTestVisible="True"
                            ScrollViewer.CanContentScroll="False"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            HorizontalContentAlignment ="Stretch"
                            Height="700"
                            MaxHeight="700"
                            Margin="0,41,0,0" 
                            Grid.RowSpan="2">
                            <ListView.ItemTemplate >
                                <DataTemplate>
                                    <local:PromoProductBlock
                                        DataContext="{Binding}">
                                    </local:PromoProductBlock>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListItemContainer}">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                        <Grid
                            Background="Transparent"
                            VerticalAlignment="Center"
                            Grid.Row="1"
                            Margin="20"
                            Visibility="{c:Binding 'FilterProductPromos == null or FilterProductPromos.Count == 0', UpdateSourceTrigger=PropertyChanged}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Image
                                Source="..\..\..\..\Assets\Images\MagicBox.png"
                                Height="150"/>
                            <TextBlock
                                Grid.Row="2"
                                Text="No product yet"
                                FontSize="{StaticResource FontSizeHeadline3}"
                                HorizontalAlignment="Center"/>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </ScrollViewer>
    <UserControl.InputBindings>
        <KeyBinding
            Key="Enter"
            Command="{Binding SearchCommand}"/>
    </UserControl.InputBindings>
</UserControl>
