<UserControl x:Class="WPFEcommerceApp.PromoTypeBlock"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPFEcommerceApp"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
             mc:Ignorable="d"
             x:Name="promoTypeBlock">
    <Grid>
        <Grid.Resources>
            <Style x:Key="RadioButtonShopPromoType" TargetType="{x:Type RadioButton}">
                <Setter Property="Foreground" Value="{StaticResource BlackColorBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BlackColorBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource Regular}"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="FontSize" Value="{StaticResource FontSizeHeadline3}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Click">
                                    <DoubleAnimationUsingKeyFrames 
                                        Storyboard.TargetProperty="ScaleX" 
                                        Storyboard.TargetName="scaleTransform">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.05"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames 
                                        Storyboard.TargetProperty="ScaleY" 
                                        Storyboard.TargetName="scaleTransform">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.3"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.5"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames 
                                        Storyboard.TargetProperty="(UIElement.Opacity)" 
                                        Storyboard.TargetName="InteractionEllipse">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.2"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid 
                                x:Name="templateRoot" 
                                Background="White" 
                                SnapsToDevicePixels="True"
                                Width="{TemplateBinding Width}">
                                <Rectangle 
                                        x:Name="InteractionEllipse" 
                                        Fill="{TemplateBinding BorderBrush}" 
                                        Opacity="0" 
                                        Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}"
                                        RenderTransformOrigin="0.5,0.5" >
                                    <Rectangle.RenderTransform>
                                        <ScaleTransform
                                                x:Name="scaleTransform"
                                                ScaleX="1"
                                                ScaleY="1"/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <Border
                                    x:Name="graphic"
                                    Background="White"
                                    BorderBrush="{StaticResource BoxLineColorBrush}"
                                    BorderThickness="1">
                                    <Grid>
                                        <Path 
                                            Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=BorderBrush}" 
                                            HorizontalAlignment="Right">
                                            <Path.Data>
                                                <PathGeometry>
                                                    <PathGeometry.Figures>
                                                        <PathFigureCollection>
                                                            <PathFigure IsClosed="True" StartPoint="0,0">
                                                                <PathFigure.Segments>
                                                                    <PathSegmentCollection>
                                                                        <LineSegment Point="25,0" />
                                                                        <LineSegment Point="25,25" />
                                                                    </PathSegmentCollection>
                                                                </PathFigure.Segments>
                                                            </PathFigure>
                                                        </PathFigureCollection>
                                                    </PathGeometry.Figures>
                                                </PathGeometry>
                                            </Path.Data>
                                        </Path>
                                        <materialDesign:PackIcon
                                            x:Name="checkGraphic"
                                            Kind="Check"
                                            Foreground="White"
                                            VerticalAlignment="Top"
                                            HorizontalAlignment="Right"
                                            Visibility="Collapsed"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter
                                    x:Name="contentPresenter" 
                                    Grid.Column="1" 
                                    Focusable="False" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="0 0 25 0" 
                                    RecognizesAccessKey="True" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="ButtonBase.Click">
                                    <BeginStoryboard Storyboard="{StaticResource Click}"/>
                                </EventTrigger>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                    <Setter Property="Padding" Value="4,2,0,0"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="BorderBrush" TargetName="graphic" Value="{StaticResource NotAvailableColorBrush}" />
                                    <Setter Property="Opacity" Value="0.25"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true"/>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="BorderBrush" TargetName="graphic" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RadioButton}, Path=BorderBrush}"/>
                                    <Setter Property="Visibility" TargetName="checkGraphic" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="BorderBrush" TargetName="graphic" Value="{StaticResource BoxShadowColorBrush}"/>
                                    <Setter Property="Visibility" TargetName="checkGraphic" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter Property="BorderBrush" TargetName="graphic" Value="{StaticResource NotAvailableColorBrush}" />
                                    <Setter Property="Opacity" TargetName="graphic" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="BorderBrush" TargetName="graphic" Value="{DynamicResource ValidationErrorBrush}"/>
                                    <Setter Property="Control.Foreground" TargetName="contentPresenter" Value="{DynamicResource ValidationErrorBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <Grid>
            <RadioButton
                Style="{StaticResource RadioButtonShopPromoType}"
                IsChecked="{Binding ElementName=promoTypeBlock,Path=IsChecked}"
                BorderBrush="{Binding ElementName=promoTypeBlock, Path=OverlayBackground}"
                GroupName="{Binding ElementName=promoTypeBlock, Path=GroupName}">
                <RadioButton.Content>
                    <Grid
                        Margin="5 5 0 5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid
                            Background="{Binding ElementName=promoTypeBlock, Path=OverlayBackground}"
                            Opacity="0.3"/>
                        <materialDesign:PackIcon
                            Margin="1"
                            Grid.Column="0"
                            Kind="{Binding ElementName=promoTypeBlock, Path=Icon}"
                            Foreground="{Binding ElementName=promoTypeBlock, Path=OverlayBackground}"
                            Width="30"
                            Height="30"
                            VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Center"/>
                        <TextBlock
                            Grid.Column="2"
                            Text="{Binding ElementName=promoTypeBlock,Path=ContentPromoBlock}"
                            FontWeight="DemiBold"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"/>
                    </Grid>
                </RadioButton.Content>
            </RadioButton>
        </Grid>
    </Grid>
</UserControl>
