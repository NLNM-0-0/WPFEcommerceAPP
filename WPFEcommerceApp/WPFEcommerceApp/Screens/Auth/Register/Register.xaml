<UserControl x:Class="WPFEcommerceApp.Register"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPFEcommerceApp"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             x:Name="Regist"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             d:DesignHeight="800" Width="780">
    <UserControl.Resources>
        <local:FalsesToTrueConverters x:Key="FalsesToTrueConverters"/>
        <local:BindingProxy x:Key="proxy" Data="{Binding ElementName=Regist, Path=DataContext}"/>
    </UserControl.Resources>
    <materialDesign:DialogHost  
        CloseOnClickAway="True"
        Identifier="Regist">
        <materialDesign:DialogHost.InputBindings>
            <KeyBinding Key="Esc" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"/>
        </materialDesign:DialogHost.InputBindings>
        <StackPanel Background="White">
            <StackPanel.Resources>
                <Style x:Key="RadioButtonGender" TargetType="{x:Type RadioButton}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource WhiteColorBrush}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource BoxLineColorBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource BlackColorBrush}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="Padding" Value="10 0"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
                    <Setter Property="FontFamily" Value="{StaticResource Light}"/>
                    <Setter Property="FontSize" Value="{StaticResource FontSizeHeadline3}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Grid SnapsToDevicePixels="True">
                                    <Border x:Name="border"
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="10" 
                                    Height="{TemplateBinding Height}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <TextBlock  x:Name="contentPresenter" 
                                            Focusable="False" 
                                            HorizontalAlignment='Center'
                                            Margin="{TemplateBinding Padding}" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                            Text="{TemplateBinding Content}"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            FontSize="{TemplateBinding FontSize}"
                                            Foreground="{TemplateBinding Foreground}"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="true">
                                        <Setter Property="Background" Value="{StaticResource BlackColorBrush}"/>
                                        <Setter Property="Foreground" Value="{StaticResource WhiteColorBrush}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource BlackColorBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Background" Value="{StaticResource WhiteColorBrush}"/>
                                        <Setter Property="Foreground" Value="{StaticResource BlackColorBrush}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource BoxLineColorBrush}"/>
                                    </Trigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </StackPanel.Resources>
            <!--#region Header-->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock 
                Grid.ColumnSpan="2"
                   Text="BECOME A WANO's MEMBER" 
                   TextAlignment="Center"
                   FontWeight="Bold"
                   FontSize="30"
                   Margin="30 40 0 15"
                   TextWrapping="Wrap"/>
                <Button
                        x:Name="ButtonClose"
                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                        Grid.Column="1"
                        Margin="0 0 10 0"
                        Padding="0"
                        Height="30"
                        Width="30"
                        Background="Transparent"
                        BorderBrush="{StaticResource NotAvailableColorBrush}"
                        BorderThickness="3">

                    <fa:ImageAwesome
                            x:Name="IconButtonClose"
                            Icon="Close"
                            Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=BorderBrush}"
                            Width="10"
                            Height="10"/>
                </Button>
            </Grid>
            <TextBlock Text="Create your WANO account and get access to many variety of products"
                   TextAlignment="Center"
                   FontWeight="Bold"
                   FontSize="20"
                   Margin="0 0 0 15"
                   TextWrapping="Wrap">

            </TextBlock>
            <!--#endregion-->

            <!--#region Regist field-->
            <StackPanel Visibility="{Binding ElementName=Regist, Path=DataContext.isCreated, Converter={StaticResource InverseBoolToVisConverter}}">
                <TextBox Style="{StaticResource TextBoxHintBlackBorder}"
                        materialDesign:HintAssist.Hint="Email Address"
                        Width="auto"
                        x:Name="Email"
                        HorizontalContentAlignment="Stretch"
                        Margin="30,20,30,5">
                    <TextBox.Text>
                        <Binding Path="Email" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                            <Binding.ValidationRules>
                                <local:EmailValidateRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <PasswordBox
                        x:Name="Password"
                        Style="{StaticResource PasswordOutlinedReveal}"            
                        materialDesign:HintAssist.Hint="Password"
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        Width="auto"
                        Margin="30,20,30,5"
                        HorizontalContentAlignment="Stretch"
                        materialDesign:HintAssist.HelperText="">
                    <materialDesign:PasswordBoxAssist.Password>
                        <Binding Path="Password" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True">
                            <Binding.ValidationRules>
                                <local:PasswordValidateRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </materialDesign:PasswordBoxAssist.Password>
                </PasswordBox>
                <PasswordBox
                        x:Name="ConfirmPassword"
                        Style="{StaticResource PasswordOutlinedReveal}"            
                        materialDesign:HintAssist.Hint="Confirm Password"
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        Width="auto"
                        Margin="30,20,30,5"
                        HorizontalContentAlignment="Stretch"
                        materialDesign:HintAssist.HelperText="">
                    <materialDesign:PasswordBoxAssist.Password>
                        <Binding Path="ConfirmPassword" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True" Mode="TwoWay">
                            <Binding.ValidationRules>
                                <local:PasswordValidateRule CheckPrevPass="True">
                                    <local:PasswordValidateRule.Wrapper>
                                        <local:Wrapper PrevPassword="{Binding Data.Password, Source={StaticResource proxy}}"/>
                                    </local:PasswordValidateRule.Wrapper>
                                </local:PasswordValidateRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </materialDesign:PasswordBoxAssist.Password>
                </PasswordBox>

                <CheckBox
                    Margin="30 30 0 15"
                    IsChecked="{Binding IsCheckAgree, Mode=TwoWay}"
                    Content="Agree to WANO's Privacy Policy and Terms of Use"
                    FontSize="15"
                    Background="{StaticResource BlackColorBrush}">
                    <CheckBox.InputBindings>
                        <KeyBinding Key="Return" Command="{Binding ElementName=Regist, Path=DataContext.KeyHandle_PolicyEnter}"/>
                    </CheckBox.InputBindings>
                </CheckBox>
            </StackPanel>
            <!--#endregion-->

            <!--#region Infor field-->
            <StackPanel Visibility="{Binding ElementName=Regist, Path=DataContext.isCreated, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBox Style="{StaticResource TextBoxHintBlackBorder}"
                    materialDesign:HintAssist.Hint="Your name"
                    Width="auto"
                    Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, Mode=TwoWay}"
                    HorizontalContentAlignment="Stretch"
                    Margin="30,20,30,5">

                </TextBox>
                
                <TextBox Style="{StaticResource TextBoxHintBlackBorder}"
                    materialDesign:HintAssist.Hint="Phone Number"
                    x:Name="PhoneNumber"
                    Width="auto"
                    HorizontalContentAlignment="Stretch"
                    Margin="30,20,30,5">
                    <TextBox.Text>
                        <Binding Path="Phone" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True">
                            <Binding.ValidationRules>
                                <local:PhoneValidateRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                
                <TextBox Style="{StaticResource TextBoxHintBlackBorder}"
                    materialDesign:HintAssist.Hint="Address"
                    Width="auto"
                    Text="{Binding Address, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                    HorizontalContentAlignment="Stretch"
                    Margin="30,20,30,10">

                </TextBox>
                <Grid
             Margin="30,0,30,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <RadioButton
                        GroupName="Gender"
                        Grid.Column="0"
                        Style="{StaticResource RadioButtonGender}"
                        Margin="30,20,30,0"
                        Content="Male"
                        Width="auto"
                        IsChecked="True"
                        HorizontalAlignment="Stretch"/>
                    <RadioButton
                        GroupName="Gender"
                        Grid.Column="1"
                        Style="{StaticResource RadioButtonGender}"
                        Margin="30,20,30,0"
                        IsChecked="{Binding ElementName=Regist, Path=DataContext.Gender}"
                        Content="Female" />
                </Grid>
                
            </StackPanel>

            <!--#endregion-->
            <Button Width="auto"
                Margin="30"
                Content="Register"
                Command="{Binding Regist}"
                CommandParameter="{Binding ElementName=ButtonClose}">
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource FalsesToTrueConverters}">
                        <Binding ElementName="PhoneNumber" Path="(Validation.HasError)"/>
                        <Binding ElementName="ConfirmPassword" Path="(Validation.HasError)"/>
                        <Binding ElementName="Password" Path="(Validation.HasError)"/>
                        <Binding ElementName="Email" Path="(Validation.HasError)"/>
                    </MultiBinding>
                </Button.IsEnabled>
            </Button>
        </StackPanel>
    </materialDesign:DialogHost>
</UserControl>

